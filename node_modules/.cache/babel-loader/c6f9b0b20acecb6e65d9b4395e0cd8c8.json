{"ast":null,"code":"import styled, { css } from 'styled-components';\nimport { disabledStyle, edgeStyle, focusStyle, normalizeColor, parseMetricToNum, getRGBA } from '../../utils';\nimport { defaultProps } from '../../default-props'; // opacity of the bound trumps the track opacity\n\nvar getBoundOpacity = function getBoundOpacity(props, bound) {\n  return props.theme.rangeInput && props.theme.rangeInput.track && props.theme.rangeInput.track[bound] && props.theme.rangeInput.track[bound].opacity ? props.theme.rangeInput.track[bound].opacity : 1;\n};\n\nvar getBoundColor = function getBoundColor(props, bound) {\n  if (props.theme.rangeInput && props.theme.rangeInput.track && props.theme.rangeInput.track[bound] && props.theme.rangeInput.track[bound].color) {\n    return getRGBA(normalizeColor(props.theme.rangeInput.track[bound].color, props.theme), getBoundOpacity(props, bound));\n  } // If bound color is undefined pick the default track color with bound opacity\n\n\n  return getRGBA(normalizeColor(props.theme.rangeInput.track.color, props.theme), getBoundOpacity(props, bound));\n};\n\nvar trackColorStyle = function trackColorStyle(props) {\n  var _props$theme$rangeInp, _props$theme$rangeInp2;\n\n  var max = props.max,\n      min = props.min;\n  var thumbPosition = ((props.value || 0) - min) / (max - min) * 100 + \"%\";\n  var defaultTrackColor; // backward compatibility in case no bounds are defined\n\n  if (props.theme.rangeInput && props.theme.rangeInput.track && !props.theme.rangeInput.track.lower && !props.theme.rangeInput.track.upper) {\n    var color = getRGBA(normalizeColor(props.theme.rangeInput.track.color, props.theme), 0.2); // Since the track color was changed from border-with-opacity to just border\n    // this condition is used to make sure we are applying the opacity correctly\n    // for 'border' color (for backward compatibility purposes).\n\n    if (color === 'rgba(0, 0, 0, 0.2)') {\n      defaultTrackColor = color;\n    } // no bounds are defined but color may have changed\n    else {\n      defaultTrackColor = getRGBA(normalizeColor(props.theme.rangeInput.track.color, props.theme), props.theme.rangeInput.track.opacity || 1);\n    }\n\n    if (!props.color) return \"background: \" + defaultTrackColor;\n  }\n\n  var upperTrackColor = (_props$theme$rangeInp = props.theme.rangeInput.track) != null && _props$theme$rangeInp.upper ? getBoundColor(props, 'upper') : defaultTrackColor;\n  var lowerTrackColor = (_props$theme$rangeInp2 = props.theme.rangeInput.track) != null && _props$theme$rangeInp2.lower ? getBoundColor(props, 'lower') : getRGBA(normalizeColor(props.theme.global.colors.control, props.theme), props.theme.rangeInput.track.opacity || 1);\n\n  if (typeof props.color === 'string' || typeof props.color === 'object' && !Array.isArray(props.color)) {\n    lowerTrackColor = normalizeColor(props.color, props.theme);\n    return \"background: linear-gradient(\\n        to right,\\n        \" + lowerTrackColor + \",\\n        \" + lowerTrackColor + \" \" + thumbPosition + \",\\n        \" + upperTrackColor + \" \" + thumbPosition + \",\\n        \" + upperTrackColor + \"\\n      );\\n    \";\n  }\n\n  if (Array.isArray(props.color)) {\n    var arrayOfTrackColors = props.color;\n    var valuePercentage = 0;\n    var result = \"background: linear-gradient(to right,\";\n\n    for (var index = 0; index < arrayOfTrackColors.length; index += 1) {\n      var _arrayOfTrackColors$i = arrayOfTrackColors[index],\n          value = _arrayOfTrackColors$i.value,\n          _color = _arrayOfTrackColors$i.color,\n          opacity = _arrayOfTrackColors$i.opacity;\n      result += getRGBA(normalizeColor(_color, props.theme), opacity || 1) + \" \" + valuePercentage + \"%,\";\n\n      if (props.value >= value) {\n        valuePercentage = (value - min) / (max - min) * 100;\n        result += getRGBA(normalizeColor(_color, props.theme), opacity || 1) + \" \" + valuePercentage + \"%,\";\n      } else {\n        result += getRGBA(normalizeColor(_color, props.theme), opacity || 1) + \" \" + thumbPosition + \",\";\n        result += upperTrackColor + \" \" + thumbPosition + \", \" + upperTrackColor + \")\";\n        break;\n      }\n\n      if (index === arrayOfTrackColors.length - 1) {\n        result += upperTrackColor + \" \" + valuePercentage + \"%, \" + upperTrackColor + \")\";\n      }\n    }\n\n    return result;\n  }\n\n  return \"background: linear-gradient(\\n      to right,\\n      \" + lowerTrackColor + \",\\n      \" + lowerTrackColor + \" \" + thumbPosition + \",\\n      \" + upperTrackColor + \" \" + thumbPosition + \",\\n      \" + upperTrackColor + \"\\n    );\\n  \";\n};\n\nvar disabledRangeInputStyle = function disabledRangeInputStyle(props, context) {\n  var _props$theme$rangeInp3;\n\n  return css([\"\", \" \", \"\"], disabledStyle(props.theme.rangeInput.disabled.opacity), ((_props$theme$rangeInp3 = props.theme.rangeInput.disabled[context]) == null ? void 0 : _props$theme$rangeInp3.color) && \"background: \" + normalizeColor(props.theme.rangeInput.disabled[context].color, props.theme) + \";\");\n};\n\nvar hoverStyle = function hoverStyle(props) {\n  return css([\"box-shadow:0px 0px 0px 2px \", \";\"], normalizeColor(props.theme.rangeInput.thumb.color || 'control', props.theme));\n};\n\nvar rangeTrackStyle = css([\"box-sizing:border-box;width:100%;height:\", \";\", \";\", \" \", \";\"], function (props) {\n  return props.theme.rangeInput.track.height;\n}, function (props) {\n  return trackColorStyle(props);\n}, function (props) {\n  return props.theme.rangeInput && props.theme.rangeInput.track && props.theme.rangeInput.track.extend;\n}, function (props) {\n  var _props$theme, _props$theme$rangeInp4;\n\n  return props.disabled && ((_props$theme = props.theme) == null ? void 0 : (_props$theme$rangeInp4 = _props$theme.rangeInput) == null ? void 0 : _props$theme$rangeInp4.disabled) && disabledRangeInputStyle(props, 'track');\n});\nvar rangeThumbStyle = css([\"box-sizing:border-box;position:relative;border-radius:\", \";height:\", \";width:\", \";overflow:visible;background:\", \";-webkit-appearance:none;cursor:pointer;\", \" \", \";\"], function (props) {\n  return props.theme.global.spacing;\n}, function (props) {\n  return props.theme.global.spacing;\n}, function (props) {\n  return props.theme.global.spacing;\n}, function (props) {\n  return normalizeColor(props.theme.rangeInput.thumb.color || 'control', props.theme);\n}, function (props) {\n  return props.theme.rangeInput && props.theme.rangeInput.thumb && props.theme.rangeInput.thumb.extend;\n}, function (props) {\n  var _props$theme2, _props$theme2$rangeIn;\n\n  return props.disabled && ((_props$theme2 = props.theme) == null ? void 0 : (_props$theme2$rangeIn = _props$theme2.rangeInput) == null ? void 0 : _props$theme2$rangeIn.disabled) && disabledRangeInputStyle(props, 'thumb');\n});\nvar firefoxMicrosoftThumbStyle = css([\"\", \" margin-top:0px;height:\", \";width:\", \";\", \" \", \"\"], rangeThumbStyle, function (props) {\n  return props.theme.global.spacing;\n}, function (props) {\n  return props.theme.global.spacing;\n}, function (props) {\n  return props.focus && props.focusIndicator && focusStyle();\n}, function (props) {\n  return props.theme.rangeInput && props.theme.rangeInput.thumb && props.theme.rangeInput.thumb.extend;\n});\n/* eslint-disable max-len */\n\nvar StyledRangeInput = styled.input.withConfig({\n  displayName: \"StyledRangeInput\",\n  componentId: \"sc-15st9ck-0\"\n})([\"box-sizing:border-box;position:relative;-webkit-appearance:none;border-color:transparent;height:\", \";width:100%;padding:0px;cursor:\", \";background:transparent;\", \" &::-moz-focus-inner{border:none;}&::-moz-focus-outer{border:none;}&::-webkit-slider-runnable-track{\", \"}&::-webkit-slider-thumb{margin-top:-\", \"px;\", \" \", \" \", \"}&::-moz-range-track{\", \"}&::-moz-range-thumb{\", \"}&::-ms-thumb{\", \"}\", \" &::-ms-track{\", \" border-color:transparent;color:transparent;}&::-ms-fill-lower{\", \";border-color:transparent;}&::-ms-fill-upper{\", \";border-color:transparent;}&:focus::-webkit-slider-thumb{\", \"}&:focus-visible{outline:0;}&:focus{outline:none;}\", \"\"], function (props) {\n  return props.theme.global.spacing;\n}, function (props) {\n  return props.disabled ? 'default' : 'pointer';\n}, function (props) {\n  return props.theme.rangeInput.pad && edgeStyle('padding', props.theme.rangeInput.pad, props.responsive, props.theme.box.responsiveBreakpoint, props.theme);\n}, rangeTrackStyle, function (props) {\n  return (parseMetricToNum(props.theme.global.spacing) - parseMetricToNum(props.theme.rangeInput.track.height || 0)) * 0.5;\n}, rangeThumbStyle, function (props) {\n  return !props.disabled && css([\"&:hover{\", \"}\"], hoverStyle(props));\n}, function (props) {\n  return props.focus && !props.focusIndicator && css([\"\", \"\"], hoverStyle(props));\n}, rangeTrackStyle, firefoxMicrosoftThumbStyle, firefoxMicrosoftThumbStyle, function (props) {\n  return !props.disabled && css([\"&:hover::-moz-range-thumb{\", \"}&:hover::-ms-thumb{\", \"}\"], hoverStyle(props), hoverStyle(props));\n}, rangeTrackStyle, function (props) {\n  return trackColorStyle(props, 'lower');\n}, function (props) {\n  return trackColorStyle(props, 'upper');\n}, function (props) {\n  return props.focus && props.focusIndicator && focusStyle();\n}, function (props) {\n  return props.theme.rangeInput && props.theme.rangeInput.extend;\n});\n/* eslint-enable max-len */\n\nStyledRangeInput.defaultProps = {};\nObject.setPrototypeOf(StyledRangeInput.defaultProps, defaultProps);\nexport { StyledRangeInput };","map":null,"metadata":{},"sourceType":"module"}