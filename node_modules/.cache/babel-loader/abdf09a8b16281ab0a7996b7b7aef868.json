{"ast":null,"code":"var _excluded = [\"actions\", \"gridProps\", \"parent\", \"responsive\", \"size\", \"subtitle\", \"title\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Box } from '../Box';\nimport { Header } from '../Header';\nimport { Heading } from '../Heading';\nimport { Grid } from '../Grid';\nimport { Paragraph } from '../Paragraph';\nimport { ResponsiveContext } from '../../contexts/ResponsiveContext';\n\nvar sizeStyle = function sizeStyle(size, feature, theme) {\n  var _ref, _theme$pageHeader$siz;\n\n  var style = _extends({}, theme.pageHeader[feature], (_ref = size && ((_theme$pageHeader$siz = theme.pageHeader.size[size]) == null ? void 0 : _theme$pageHeader$siz[feature])) != null ? _ref : theme.pageHeader[feature]);\n\n  return style;\n};\n\nvar PageHeader = /*#__PURE__*/forwardRef(function (_ref2, ref) {\n  var actions = _ref2.actions,\n      gridPropsProp = _ref2.gridProps,\n      parent = _ref2.parent,\n      responsive = _ref2.responsive,\n      size = _ref2.size,\n      subtitle = _ref2.subtitle,\n      title = _ref2.title,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded);\n\n  var theme = useContext(ThemeContext);\n  var breakpoint = useContext(ResponsiveContext);\n\n  var actionsProps = _extends({}, theme.pageHeader.actions);\n\n  var gridProps = theme.pageHeader[breakpoint] || theme.pageHeader.medium;\n\n  if (responsive && theme.pageHeader.responsive.breakpoints.includes(breakpoint)) {\n    gridProps = _extends({}, gridProps, theme.pageHeader.responsive);\n    actionsProps = _extends({}, actionsProps, theme.pageHeader.responsive.actions);\n  }\n\n  var _gridProps = gridProps,\n      areas = _gridProps.areas,\n      columns = _gridProps.columns,\n      gap = _gridProps.gap,\n      rows = _gridProps.rows;\n  return /*#__PURE__*/React.createElement(Header, _extends({\n    ref: ref,\n    direction: \"column\",\n    gap: \"none\",\n    pad: sizeStyle(size, 'pad', theme)\n  }, rest), /*#__PURE__*/React.createElement(Grid, _extends({\n    columns: columns,\n    rows: rows,\n    areas: areas,\n    gap: gap,\n    fill: \"horizontal\"\n  }, gridPropsProp), /*#__PURE__*/React.createElement(Box, _extends({\n    gridArea: \"parent\"\n  }, theme.pageHeader.parent), parent), /*#__PURE__*/React.createElement(Box, {\n    gridArea: \"title\"\n  }, typeof title === 'string' ? /*#__PURE__*/React.createElement(Heading, sizeStyle(size, 'title', theme), title) : title), /*#__PURE__*/React.createElement(Box, {\n    gridArea: \"subtitle\"\n  }, typeof subtitle === 'string' ? /*#__PURE__*/React.createElement(Paragraph, sizeStyle(size, 'subtitle', theme), subtitle) : subtitle), /*#__PURE__*/React.createElement(Box, _extends({\n    gridArea: \"actions\"\n  }, actionsProps), actions)));\n});\nPageHeader.displayName = 'PageHeader';\nexport { PageHeader };","map":null,"metadata":{},"sourceType":"module"}