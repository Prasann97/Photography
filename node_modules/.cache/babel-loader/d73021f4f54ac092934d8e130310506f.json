{"ast":null,"code":"var _excluded = [\"context\", \"expanded\", \"onToggle\", \"pad\"],\n    _excluded2 = [\"background\", \"border\", \"context\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Blank } from 'grommet-icons/icons/Blank';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { TableCell } from '../TableCell';\nimport { normalizeColor } from '../../utils'; // ExpanderControl is separated from ExpanderCell to give TableCell a chance\n// to set the ThemeContext dark context.\n\nvar ExpanderControl = function ExpanderControl(_ref) {\n  var context = _ref.context,\n      expanded = _ref.expanded,\n      onToggle = _ref.onToggle,\n      pad = _ref.pad,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var content;\n\n  if (onToggle) {\n    var ExpandIcon = theme.dataTable.icons[expanded ? 'contract' : 'expand'];\n    content = /*#__PURE__*/React.createElement(ExpandIcon, {\n      color: normalizeColor('border', theme)\n    });\n  } else {\n    content = /*#__PURE__*/React.createElement(Blank, null);\n  }\n\n  var normalizedThemeProps = _extends({}, theme.table[context], theme.dataTable[context]);\n\n  delete normalizedThemeProps.background;\n  delete normalizedThemeProps.border;\n  delete normalizedThemeProps.pad;\n  content = /*#__PURE__*/React.createElement(Box, _extends({}, normalizedThemeProps, rest, {\n    align: \"center\",\n    fill: true,\n    pad: pad\n  }), content);\n\n  if (onToggle) {\n    content = /*#__PURE__*/React.createElement(Button, {\n      fill: true,\n      a11yTitle: expanded ? 'collapse' : 'expand',\n      hoverIndicator: true,\n      onClick: onToggle,\n      plain: true\n    }, content);\n  }\n\n  return content;\n};\n\nvar ExpanderCell = function ExpanderCell(_ref2) {\n  var background = _ref2.background,\n      border = _ref2.border,\n      context = _ref2.context,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n\n  return /*#__PURE__*/React.createElement(TableCell, {\n    background: background,\n    border: border,\n    size: \"xxsmall\",\n    plain: \"noPad\",\n    verticalAlign: context === 'groupEnd' ? 'bottom' : 'top'\n  }, /*#__PURE__*/React.createElement(ExpanderControl, _extends({\n    context: context\n  }, rest)));\n};\n\nExpanderCell.displayName = 'ExpanderCell';\nExpanderCell.defaultProps = {};\nObject.setPrototypeOf(ExpanderCell.defaultProps, defaultProps);\nexport { ExpanderCell };","map":null,"metadata":{},"sourceType":"module"}