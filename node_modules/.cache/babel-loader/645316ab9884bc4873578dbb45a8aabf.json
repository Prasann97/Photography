{"ast":null,"code":"import React, { Children, cloneElement, useContext, useRef, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { Box } from '../Box';\nimport { Text } from '../Text';\nimport { Layer } from '../Layer';\nimport { defaultProps } from '../../default-props';\nimport { MessageContext } from '../../contexts/MessageContext';\nimport { SkipLinksPropTypes } from './propTypes';\n\nvar SkipLinks = function SkipLinks(_ref) {\n  var children = _ref.children,\n      id = _ref.id,\n      messages = _ref.messages;\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useState = useState(false),\n      showLayer = _useState[0],\n      setShowLayer = _useState[1];\n\n  var _useContext = useContext(MessageContext),\n      format = _useContext.format;\n\n  var layerRef = useRef(null);\n\n  var onFocus = function onFocus() {\n    setShowLayer(true);\n  };\n\n  var removeLayer = function removeLayer() {\n    setShowLayer(false);\n  };\n\n  var onBlur = function onBlur() {\n    // timeout needed so it gives enough time for activeElement to be updated\n    setTimeout(function () {\n      var layerNode = layerRef.current;\n\n      if (layerNode && !layerNode.contains(document.activeElement)) {\n        // close the layer when the activeElement isn't contained in the layer\n        removeLayer();\n      }\n    }, 0);\n  };\n\n  return /*#__PURE__*/React.createElement(Layer, {\n    id: id,\n    position: showLayer ? theme.skipLinks.position : 'hidden',\n    ref: layerRef,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    modal: false // Prepend the Layer so any SkipLink will be the first element that\n    // pressing the Tab key reaches, targetChildPosition triggers prepend.\n    ,\n    targetChildPosition: \"first\" // Non-modal Layer's will take the full screen at small breakpoints\n    // by default, which isn't what we want, hence setting responsive false\n    ,\n    responsive: false\n  }, /*#__PURE__*/React.createElement(Box, theme.skipLinks.container, /*#__PURE__*/React.createElement(Text, theme.skipLinks.label, format({\n    id: 'skipLinks.skipTo',\n    messages: messages\n  })), /*#__PURE__*/React.createElement(Box, {\n    align: \"center\",\n    gap: \"medium\"\n  }, Children.map(children, function (child, index) {\n    return /*#__PURE__*/cloneElement(child, {\n      // eslint-disable-next-line react/no-array-index-key\n      key: \"skip-link-\" + index,\n      onClick: removeLayer\n    });\n  }))));\n};\n\nSkipLinks.defaultProps = {};\nSkipLinks.propTypes = SkipLinksPropTypes;\nexport { SkipLinks };","map":null,"metadata":{},"sourceType":"module"}