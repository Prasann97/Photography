{"ast":null,"code":"import PropTypes from 'prop-types';\nimport { colorPropType } from '../../utils/general-prop-types';\nvar animationPropType = PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['pulse', 'draw']), PropTypes.shape({\n  type: PropTypes.oneOf(['pulse', 'draw']),\n  delay: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  duration: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  size: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge'])\n})]);\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = {\n    animation: animationPropType,\n    connections: PropTypes.arrayOf(PropTypes.shape({\n      anchor: PropTypes.oneOf(['center', 'vertical', 'horizontal']),\n      animation: animationPropType,\n      color: colorPropType,\n      fromTarget: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n      label: PropTypes.string,\n      // for accessibility\n      offset: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large']), PropTypes.string]),\n      thickness: PropTypes.oneOfType([PropTypes.oneOf(['hair', 'xxsmall', 'xsmall', 'small', 'medium', 'large']), PropTypes.string]),\n      toTarget: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n      type: PropTypes.oneOf(['direct', 'curved', 'rectilinear'])\n    })).isRequired\n  };\n}\n\nexport var DiagramPropTypes = PropType;","map":null,"metadata":{},"sourceType":"module"}