{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef } from 'react';\nimport { Box } from '../Box';\nvar YGuide = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var guide = _ref.guide,\n      padArg = _ref.pad; // omit any horizontal pad so the guides cover the thickness that\n  // is within the pad\n\n  var pad;\n  if (typeof padArg === 'object') pad = _extends({}, padArg, {\n    start: 'none',\n    end: 'none'\n  });else if (typeof padArg === 'string') pad = {\n    vertical: padArg\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    ref: ref,\n    fill: true,\n    justify: \"between\",\n    pad: pad,\n    responsive: false\n  }, Array.from({\n    length: guide.y.count\n  }).map(function (_, i) {\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      React.createElement(Box, {\n        key: i,\n        border: \"top\"\n      })\n    );\n  }));\n});\nexport { YGuide };","map":null,"metadata":{},"sourceType":"module"}