{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport PropTypes from 'prop-types';\nimport { backgroundPropType, genericProps, colorPropType, hoverIndicatorPropType } from '../../utils/general-prop-types';\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = _extends({}, genericProps, {\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.node]),\n    active: PropTypes.bool,\n    as: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.elementType]),\n    badge: PropTypes.oneOfType([PropTypes.bool, PropTypes.element, PropTypes.number, PropTypes.shape({\n      background: backgroundPropType,\n      max: PropTypes.number,\n      value: PropTypes.oneOfType([PropTypes.bool, PropTypes.number])\n    })]),\n    color: colorPropType,\n    disabled: PropTypes.bool,\n    fill: PropTypes.oneOfType([PropTypes.oneOf(['horizontal', 'vertical']), PropTypes.bool]),\n    focusIndicator: PropTypes.bool,\n    gap: PropTypes.oneOfType([PropTypes.oneOf(['none', 'xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge']), PropTypes.string]),\n    hoverIndicator: hoverIndicatorPropType,\n    href: PropTypes.string,\n    icon: PropTypes.element,\n    justify: PropTypes.oneOf(['around', 'between', 'center', 'end', 'evenly', 'start', 'stretch']),\n    label: PropTypes.node,\n    onClick: PropTypes.func,\n    plain: PropTypes.bool,\n    primary: PropTypes.bool,\n    reverse: PropTypes.bool,\n    secondary: PropTypes.bool,\n    size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n    target: PropTypes.oneOfType([PropTypes.oneOf(['_self', '_blank', '_parent', '_top']), PropTypes.string]),\n    tip: PropTypes.oneOfType([PropTypes.shape({\n      content: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n      dropProps: PropTypes.shape({}),\n      plain: PropTypes.bool\n    }), PropTypes.string]),\n    type: PropTypes.oneOf(['button', 'reset', 'submit'])\n  });\n}\n\nexport var ButtonPropTypes = PropType;","map":null,"metadata":{},"sourceType":"module"}