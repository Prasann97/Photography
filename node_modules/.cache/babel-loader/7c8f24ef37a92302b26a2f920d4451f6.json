{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport PropTypes from 'prop-types';\nimport { genericProps } from '../../utils/general-prop-types';\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = _extends({}, genericProps, {\n    children: PropTypes.func,\n    clear: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n      position: PropTypes.oneOf(['top', 'bottom']),\n      label: PropTypes.string\n    })]),\n    closeOnChange: PropTypes.bool,\n    defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.number]))]),\n    disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.object]))]),\n    disabledKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    dropAlign: PropTypes.shape({\n      top: PropTypes.oneOf(['top', 'bottom']),\n      bottom: PropTypes.oneOf(['top', 'bottom']),\n      right: PropTypes.oneOf(['left', 'right']),\n      left: PropTypes.oneOf(['left', 'right'])\n    }),\n    dropHeight: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge']), PropTypes.string]),\n    dropTarget: PropTypes.object,\n    dropProps: PropTypes.object,\n    focusIndicator: PropTypes.bool,\n    icon: PropTypes.oneOfType([PropTypes.bool, PropTypes.func, PropTypes.node, PropTypes.elementType]),\n    labelKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    messages: PropTypes.shape({\n      multiple: PropTypes.string\n    }),\n    multiple: PropTypes.bool,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    onClose: PropTypes.func,\n    onOpen: PropTypes.func,\n    onSearch: PropTypes.func,\n    onMore: PropTypes.func,\n    options: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool, PropTypes.element, PropTypes.object])).isRequired,\n    open: PropTypes.bool,\n    placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.node]),\n    plain: PropTypes.bool,\n    replace: PropTypes.bool,\n    searchPlaceholder: PropTypes.string,\n    selected: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n    size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']), PropTypes.string]),\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.element, // deprecated, use valueLabel\n    PropTypes.object, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.number]))]),\n    valueLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    valueKey: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.shape({\n      key: PropTypes.string,\n      reduce: PropTypes.bool\n    })]),\n    emptySearchMessage: PropTypes.oneOfType([PropTypes.string, PropTypes.node])\n  });\n}\n\nexport var SelectPropTypes = PropType;","map":null,"metadata":{},"sourceType":"module"}