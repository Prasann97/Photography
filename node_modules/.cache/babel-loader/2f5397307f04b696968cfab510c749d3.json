{"ast":null,"code":"import styled, { css } from 'styled-components';\nimport { genericStyles, normalizeColor, textAlignStyle } from '../../utils';\nimport { defaultProps } from '../../default-props';\nvar colorStyle = css([\"color:\", \";\"], function (props) {\n  return normalizeColor(props.colorProp, props.theme);\n});\n\nvar sizeStyle = function sizeStyle(props) {\n  var size = props.size || 'medium';\n  var data = props.theme.paragraph[size];\n  return css([\"font-size:\", \";line-height:\", \";max-width:\", \";\"], data ? data.size : size, data ? data.height : 'normal', props.fillProp ? 'none' : data && data.maxWidth);\n};\n\nvar fontFamily = css([\"font-family:\", \";\"], function (props) {\n  return props.theme.paragraph.font.family;\n});\n\nvar maxlinesStyle = function maxlinesStyle(props) {\n  return props.maxLines && css([\"display:-webkit-box;-webkit-line-clamp:\", \";-webkit-box-orient:vertical;overflow:hidden;\"], props.maxLines);\n};\n\nvar StyledParagraph = styled.p.withConfig({\n  displayName: \"StyledParagraph\",\n  componentId: \"sc-tbetod-0\"\n})([\"\", \" \", \" \", \" \", \" \", \" \", \" \", \"\"], genericStyles, function (props) {\n  return maxlinesStyle(props);\n}, function (props) {\n  return sizeStyle(props);\n}, function (props) {\n  return props.textAlign && textAlignStyle;\n}, function (props) {\n  return props.colorProp && colorStyle;\n}, function (props) {\n  return props.theme.paragraph.font && props.theme.paragraph.font.family && fontFamily;\n}, function (props) {\n  return props.theme.paragraph && props.theme.paragraph.extend;\n});\nStyledParagraph.defaultProps = {};\nObject.setPrototypeOf(StyledParagraph.defaultProps, defaultProps);\nexport { StyledParagraph };","map":null,"metadata":{},"sourceType":"module"}