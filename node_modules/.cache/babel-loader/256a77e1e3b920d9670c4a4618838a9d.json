{"ast":null,"code":"var _excluded = [\"color\", \"fill\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nimport { StyledParagraph } from './StyledParagraph';\nimport { ParagraphPropTypes } from './propTypes';\nvar Paragraph = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      fill = _ref.fill,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(StyledParagraph, _extends({\n    ref: ref,\n    colorProp: color,\n    fillProp: fill\n  }, rest));\n});\nParagraph.displayName = 'Paragraph';\nParagraph.prototype = ParagraphPropTypes;\nexport { Paragraph };","map":null,"metadata":{},"sourceType":"module"}