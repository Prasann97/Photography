{"ast":null,"code":"import React, { Fragment, useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { Box } from '../Box';\nimport { Drop } from '../Drop';\nimport { Grid } from '../Grid';\nimport { Keyboard } from '../Keyboard';\nimport { Text } from '../Text';\nimport { focusStyle, parseMetricToNum, unfocusStyle } from '../../utils';\nimport { Swatch } from './Swatch';\nvar DetailControl = styled(Box).withConfig({\n  displayName: \"Detail__DetailControl\",\n  componentId: \"sc-huiwg9-0\"\n})([\"&:focus{\", \"}&:focus:not(:focus-visible){\", \"}\"], focusStyle(), unfocusStyle());\n\nvar Detail = function Detail(_ref) {\n  var activeProperty = _ref.activeProperty,\n      axis = _ref.axis,\n      data = _ref.data,\n      padProp = _ref.pad,\n      series = _ref.series,\n      seriesStyles = _ref.seriesStyles,\n      renderValue = _ref.renderValue,\n      thickness = _ref.thickness;\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useState = useState(),\n      detailIndex = _useState[0],\n      setDetailIndex = _useState[1];\n\n  var activeIndex = useRef();\n  var detailRefs = useMemo(function () {\n    return [];\n  }, []);\n  var pad = useMemo(function () {\n    // ensure the hit targets and center lines align with\n    // the data/guide lines\n    var horizontal = (padProp == null ? void 0 : padProp.horizontal) || typeof padProp === 'string' && padProp || 0;\n    horizontal = theme.global.edgeSize[horizontal] || horizontal;\n    horizontal = parseMetricToNum(horizontal);\n    var vertical = (padProp == null ? void 0 : padProp.vertical) || typeof padProp === 'string' && padProp || 0;\n    vertical = theme.global.edgeSize[vertical] || vertical;\n    vertical = parseMetricToNum(vertical);\n    return {\n      horizontal: horizontal - parseMetricToNum(thickness) / 2 + \"px\",\n      vertical: vertical + \"px\"\n    };\n  }, [padProp, theme.global.edgeSize, thickness]);\n  var onMouseLeave = useCallback(function (event) {\n    // Only remove detail if the mouse isn't over the active index.\n    // This helps distinguish leaving the drop on the edge where it is\n    // anchored.\n    var rect = activeIndex.current.getBoundingClientRect();\n\n    if (event.pageX < rect.left || event.pageX > rect.right || event.pageY < rect.top || event.pageY > rect.bottom) {\n      activeIndex.current = undefined;\n      setDetailIndex(undefined);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Keyboard, {\n    onLeft: function onLeft() {\n      if (detailIndex === undefined) setDetailIndex(data.length - 1);else if (detailIndex > 0) setDetailIndex(detailIndex - 1);\n    },\n    onRight: function onRight() {\n      if (detailIndex === undefined) setDetailIndex(0);else if (detailIndex < data.length - 1) setDetailIndex(detailIndex + 1);\n    }\n  }, /*#__PURE__*/React.createElement(DetailControl, {\n    key: \"band\",\n    tabIndex: 0,\n    direction: \"row\",\n    fill: true,\n    pad: pad,\n    justify: \"between\",\n    responsive: false,\n    onFocus: function onFocus() {},\n    onBlur: function onBlur() {\n      return setDetailIndex(undefined);\n    }\n  }, data.map(function (_, i) {\n    return /*#__PURE__*/React.createElement(Box // eslint-disable-next-line react/no-array-index-key\n    , {\n      key: i,\n      align: \"center\",\n      responsive: false,\n      width: thickness,\n      onMouseOver: function onMouseOver(event) {\n        activeIndex.current = event.currentTarget;\n        setDetailIndex(i);\n      },\n      onMouseLeave: onMouseLeave,\n      onFocus: function onFocus() {},\n      onBlur: function onBlur() {}\n    }, /*#__PURE__*/React.createElement(Box, {\n      ref: function ref(c) {\n        detailRefs[i] = c;\n      },\n      fill: \"vertical\",\n      border: detailIndex === i ? true : undefined\n    }));\n  }))), detailIndex !== undefined && detailRefs[detailIndex] && /*#__PURE__*/React.createElement(Drop, {\n    key: \"drop\",\n    target: detailRefs[detailIndex],\n    align: detailIndex > data.length / 2 ? {\n      right: 'left'\n    } : {\n      left: 'right'\n    },\n    plain: true,\n    onMouseLeave: onMouseLeave\n  }, /*#__PURE__*/React.createElement(Box, {\n    pad: \"small\",\n    background: {\n      color: 'background-back'\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    columns: ['auto', 'auto', 'auto'],\n    gap: \"xsmall\",\n    align: \"center\"\n  }, series.filter(function (_ref2) {\n    var property = _ref2.property;\n    return !activeProperty || activeProperty === property || axis && axis.x && axis.x.property === property;\n  }).map(function (serie) {\n    var propertyStyle = seriesStyles[serie.property];\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: serie.property\n    }, propertyStyle ? /*#__PURE__*/React.createElement(Swatch, propertyStyle) : /*#__PURE__*/React.createElement(\"span\", null), /*#__PURE__*/React.createElement(Text, {\n      size: \"small\"\n    }, serie.label || serie.property), /*#__PURE__*/React.createElement(Text, {\n      size: \"small\",\n      weight: \"bold\"\n    }, renderValue(serie, detailIndex)));\n  })))));\n};\n\nexport { Detail };","map":null,"metadata":{},"sourceType":"module"}