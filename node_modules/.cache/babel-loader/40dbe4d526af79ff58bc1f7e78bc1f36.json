{"ast":null,"code":"import styled, { css } from 'styled-components';\nimport { edgeStyle, focusStyle, normalizeColor } from '../../utils';\nimport { defaultProps } from '../../default-props'; // Note: since `fillStyle` is only used in one place, `justify-content` was\n// added to it to simplify its logic. If this is ever reused somewhere else,\n// consider the need of separating those once again.\n\nvar fillStyle = function fillStyle() {\n  return \"\\n      width: 100%;\\n      height: 100%;\\n      max-width: none;\\n      flex: 1 0 auto;\\n      justify-content: space-between;\\n    \";\n};\n\nvar disabledStyle = \"\\n  opacity: 0.5;\\n  cursor: default;\\n\";\nvar hoverStyle = css([\":hover input:not([disabled]) + div,:hover input:not([disabled]) + span{border-color:\", \";}:hover{background-color:\", \";}\"], function (props) {\n  var _props$theme$checkBox, _props$theme$checkBox2;\n\n  return normalizeColor((_props$theme$checkBox = props.theme.checkBox.hover) == null ? void 0 : (_props$theme$checkBox2 = _props$theme$checkBox.border) == null ? void 0 : _props$theme$checkBox2.color, props.theme);\n}, function (props) {\n  var _props$theme$checkBox3, _props$theme$checkBox4;\n\n  return normalizeColor(!props.disabled && ((_props$theme$checkBox3 = props.theme.checkBox.hover) == null ? void 0 : (_props$theme$checkBox4 = _props$theme$checkBox3.background) == null ? void 0 : _props$theme$checkBox4.color), props.theme);\n});\nvar StyledCheckBoxIcon = styled.svg.withConfig({\n  displayName: \"StyledCheckBox__StyledCheckBoxIcon\",\n  componentId: \"sc-1dbk5ju-0\"\n})([\"box-sizing:border-box;stroke-width:\", \";stroke:\", \";width:\", \";height:\", \";\", \";\"], function (props) {\n  return props.theme.checkBox.check.thickness;\n}, function (props) {\n  return normalizeColor(props.theme.checkBox.color || 'control', props.theme);\n}, function (props) {\n  return props.theme.checkBox.icon.size || props.theme.checkBox.size;\n}, function (props) {\n  return props.theme.checkBox.icon.size || props.theme.checkBox.size;\n}, function (props) {\n  return props.theme.checkBox.icon.extend;\n});\nStyledCheckBoxIcon.defaultProps = {};\nObject.setPrototypeOf(StyledCheckBoxIcon.defaultProps, defaultProps);\nvar StyledCheckBoxContainer = styled.label.withConfig({\n  displayName: \"StyledCheckBox__StyledCheckBoxContainer\",\n  componentId: \"sc-1dbk5ju-1\"\n})([\"display:flex;flex-direction:row;align-items:\", \";user-select:none;\", \" \", \" \", \" \", \" \", \" \", \" \", \"\"], function (props) {\n  return typeof props.label === 'string' ? props.theme.checkBox.label.align : undefined;\n}, function (props) {\n  return props.fillProp ? fillStyle() : 'width: fit-content;';\n}, function (props) {\n  return (props.pad || props.theme.checkBox.pad) && edgeStyle('padding', props.pad || props.theme.checkBox.pad, props.responsive, props.theme.box.responsiveBreakpoint, props.theme);\n}, function (props) {\n  return props.disabled && disabledStyle;\n}, function (props) {\n  return !props.disabled && 'cursor: pointer;';\n}, hoverStyle, function (props) {\n  var _props$theme$checkBox5, _props$theme$checkBox6, _props$theme$checkBox7, _props$theme$checkBox8;\n\n  return props.focus && !props.focusIndicator && \"\\n    input:not([disabled]) + div,\\n    input:not([disabled]) + span {\\n      border-color: \" + normalizeColor((_props$theme$checkBox5 = props.theme.checkBox.hover) == null ? void 0 : (_props$theme$checkBox6 = _props$theme$checkBox5.border) == null ? void 0 : _props$theme$checkBox6.color, props.theme) + \";\\n    }\\n     \\n    background-color: \" + normalizeColor(!props.disabled && ((_props$theme$checkBox7 = props.theme.checkBox.hover) == null ? void 0 : (_props$theme$checkBox8 = _props$theme$checkBox7.background) == null ? void 0 : _props$theme$checkBox8.color), props.theme) + \";\";\n}, function (props) {\n  return props.theme.checkBox.extend;\n});\nStyledCheckBoxContainer.defaultProps = {};\nObject.setPrototypeOf(StyledCheckBoxContainer.defaultProps, defaultProps);\nvar StyledCheckBoxInput = styled.input.withConfig({\n  displayName: \"StyledCheckBox__StyledCheckBoxInput\",\n  componentId: \"sc-1dbk5ju-2\"\n})([\"opacity:0;-moz-appearance:none;width:0;height:0;margin:0;\", \":checked + span > span{\", \":calc( \", \" - \", \" );background:\", \";}\"], function (props) {\n  return !props.disabled && 'cursor: pointer;';\n}, function (props) {\n  return !props.theme.dir ? 'left' : 'right';\n}, function (props) {\n  return props.theme.checkBox.toggle.size;\n}, function (props) {\n  return props.theme.checkBox.size;\n}, function (props) {\n  return normalizeColor(props.theme.checkBox.color || 'control', props.theme);\n});\nStyledCheckBoxInput.defaultProps = {};\nObject.setPrototypeOf(StyledCheckBoxInput.defaultProps, defaultProps);\nvar StyledCheckBoxBox = styled.div.withConfig({\n  displayName: \"StyledCheckBox__StyledCheckBoxBox\",\n  componentId: \"sc-1dbk5ju-3\"\n})([\"\", \";\", \";\"], function (props) {\n  return props.focus && props.focusIndicator && focusStyle();\n}, function (props) {\n  return props.theme.checkBox.check.extend;\n});\nStyledCheckBoxBox.defaultProps = {};\nObject.setPrototypeOf(StyledCheckBoxBox.defaultProps, defaultProps);\nvar StyledCheckBoxToggle = styled.span.withConfig({\n  displayName: \"StyledCheckBox__StyledCheckBoxToggle\",\n  componentId: \"sc-1dbk5ju-4\"\n})([\"box-sizing:border-box;vertical-align:middle;display:inline-block;width:\", \";height:\", \";border:\", \" solid;border-color:\", \";border-radius:\", \";background-color:\", \";\", \";\", \";\"], function (props) {\n  return props.theme.checkBox.toggle.size;\n}, function (props) {\n  return props.theme.checkBox.size;\n}, function (props) {\n  return props.theme.checkBox.border.width;\n}, function (props) {\n  return normalizeColor(props.theme.checkBox.border.color, props.theme);\n}, function (props) {\n  return props.theme.checkBox.toggle.radius;\n}, function (props) {\n  return props.theme.checkBox.toggle.background ? normalizeColor(props.theme.checkBox.toggle.background, props.theme) : 'transparent';\n}, function (props) {\n  return props.focus && props.focusIndicator && focusStyle();\n}, function (props) {\n  return props.theme.checkBox.toggle.extend;\n});\nStyledCheckBoxToggle.defaultProps = {};\nObject.setPrototypeOf(StyledCheckBoxToggle.defaultProps, defaultProps);\nvar StyledCheckBoxKnob = styled.span.withConfig({\n  displayName: \"StyledCheckBox__StyledCheckBoxKnob\",\n  componentId: \"sc-1dbk5ju-5\"\n})([\"box-sizing:border-box;position:relative;display:inherit;top:-\", \";\", \":-\", \";transition:all 0.3s;width:\", \";height:\", \";background:\", \";border-radius:\", \";\", \";\"], function (props) {\n  return props.theme.checkBox.border.width;\n}, function (props) {\n  return !props.theme.dir ? 'left' : 'right';\n}, function (props) {\n  return props.theme.checkBox.border.width;\n}, function (props) {\n  return props.theme.checkBox.size;\n}, function (props) {\n  return props.theme.checkBox.size;\n}, function (props) {\n  return normalizeColor(props.theme.checkBox.toggle.color, props.theme);\n}, function (props) {\n  return props.theme.checkBox.toggle.radius;\n}, function (props) {\n  return props.theme.checkBox.toggle.knob.extend;\n});\nStyledCheckBoxKnob.defaultProps = {};\nObject.setPrototypeOf(StyledCheckBoxKnob.defaultProps, defaultProps);\nvar StyledCheckBox = styled.div.withConfig({\n  displayName: \"StyledCheckBox\",\n  componentId: \"sc-1dbk5ju-6\"\n})([\"flex-shrink:0;\"]);\nStyledCheckBox.defaultProps = {};\nObject.setPrototypeOf(StyledCheckBox.defaultProps, defaultProps);\nexport { StyledCheckBoxIcon, StyledCheckBoxContainer, StyledCheckBoxInput, StyledCheckBoxBox, StyledCheckBoxToggle, StyledCheckBoxKnob, StyledCheckBox };","map":null,"metadata":{},"sourceType":"module"}