{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport PropTypes from 'prop-types';\nimport { genericProps } from '../../utils/general-prop-types';\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = _extends({}, genericProps, {\n    autoPlay: PropTypes.bool,\n    controls: PropTypes.oneOfType([PropTypes.oneOf([false, 'over', 'below']), PropTypes.shape({\n      position: PropTypes.oneOf([false, 'over', 'below']),\n      items: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.oneOf(['captions', 'descriptions', 'fullScreen', 'play', 'pause', 'volume']), PropTypes.shape({\n        icon: PropTypes.element,\n        a11yTitle: PropTypes.string,\n        onClick: PropTypes.func,\n        disabled: PropTypes.bool\n      })]))\n    })]),\n    fit: PropTypes.oneOf(['cover', 'contain']),\n    loop: PropTypes.bool,\n    mute: PropTypes.bool,\n    messages: PropTypes.shape({\n      closeMenu: PropTypes.string,\n      fullScreen: PropTypes.string,\n      openMenu: PropTypes.string,\n      pauseButton: PropTypes.string,\n      playButton: PropTypes.string,\n      progressMeter: PropTypes.string,\n      scrubber: PropTypes.string,\n      volumeDown: PropTypes.string,\n      volumeUp: PropTypes.string\n    }),\n    skipInterval: PropTypes.number\n  });\n}\n\nexport var VideoPropTypes = PropType;","map":null,"metadata":{},"sourceType":"module"}