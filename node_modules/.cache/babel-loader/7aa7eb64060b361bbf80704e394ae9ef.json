{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport PropTypes from 'prop-types';\nimport { genericProps } from '../../utils/general-prop-types';\nvar PropType = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  PropType = _extends({}, genericProps, {\n    background: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n      color: PropTypes.string,\n      opacity: PropTypes.oneOfType([PropTypes.oneOf(['weak', 'medium', 'strong']), PropTypes.number, PropTypes.bool])\n    })]),\n    color: PropTypes.string,\n    max: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    round: PropTypes.bool,\n    size: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge', 'full']), PropTypes.string]),\n    thickness: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge']), PropTypes.string]),\n    type: PropTypes.oneOf(['bar', 'circle', 'pie', 'semicircle']),\n    direction: PropTypes.oneOf(['horizontal', 'vertical']),\n    value: PropTypes.number,\n    values: PropTypes.arrayOf(PropTypes.shape({\n      color: PropTypes.string,\n      highlight: PropTypes.bool,\n      label: PropTypes.string.isRequired,\n      // for accessibility\n      onClick: PropTypes.func,\n      onHover: PropTypes.func,\n      value: PropTypes.number.isRequired\n    }))\n  });\n}\n\nexport var MeterPropTypes = PropType;","map":null,"metadata":{},"sourceType":"module"}